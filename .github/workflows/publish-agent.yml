name: Publish Agent

on:
  push:
    branches:
      - master
    paths:
      - agent/**
      - .github/workflows/publish-agent.yml
  pull_request:
    branches:
      - master
    paths:
      - agent/**
      - .github/workflows/publish-agent.yml

jobs:
  publish-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('agent/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and publish
        working-directory: agent
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          ORG_GRADLE_PROJECT_ossrhUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_ossrhPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            VERSION=$(./gradlew -q printVersion)
            VERSION=${VERSION%-SNAPSHOT}
            VERSION=${VERSION}.${{ github.event.number }}-SNAPSHOT
            ./gradlew -Prelease -PreleaseVersion=$VERSION publishToSonatype
          else
            ./gradlew -Prelease publishToSonatype closeSonatypeStagingRepository
          fi
          

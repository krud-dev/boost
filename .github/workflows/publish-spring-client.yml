name: Publish Spring Client

on:
  push:
    branches:
      - master
    paths:
      - spring-client/**
      - .github/workflows/test-spring-client.yml
  pull_request:
    branches:
      - master
    paths:
      - spring-client/**
      - .github/workflows/test-spring-client.yml

jobs:
  publish-spring-client:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('spring-client/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Install GPG secret key
        env: 
          OSSRH_GPG_SECRET_KEY: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
      - name: Build and publish
        working-directory: spring-client
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          OSSRH_GPG_SECRET_KEY_ID: ${{ secrets.OSSRH_GPG_SECRET_KEY_ID }}
          OSSRH_GPG_SECRET_KEY_PASSWORD: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            VERSION=$(./gradlew -q printVersion)
            VERSION=${VERSION%-SNAPSHOT}
            VERSION=${VERSION}.${{ github.event.number }}-SNAPSHOT
          fi
          ./gradlew -Psigning.keyId=$OSSRH_GPG_SECRET_KEY_ID -Psigning.password=$OSSRH_GPG_SECRET_KEY_PASSWORD -Prelease -Prelease.version=$VERSION clean jar publishAllPublicationsToOSSRHRepository

!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var n=r();for(var i in n)("object"==typeof exports?exports:e)[i]=n[i]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r);const n=require("electron"),i={uuidv4:async()=>n.ipcRenderer.invoke("utils:uuidv4"),readClipboardText:async()=>n.ipcRenderer.invoke("utils:readClipboardText")},o={subscribe:(e,r)=>(n.ipcRenderer.on(e,r),()=>{n.ipcRenderer.removeListener(e,r)})},d={getTheme:()=>n.ipcRenderer.invoke("uiService:getTheme"),getThemeSource:()=>n.ipcRenderer.invoke("uiService:getThemeSource"),setThemeSource:e=>n.ipcRenderer.invoke("uiService:setThemeSource",e),minimizeWindow:()=>n.ipcRenderer.invoke("uiService:minimizeWindow"),maximizeWindow:()=>n.ipcRenderer.invoke("uiService:maximizeWindow"),closeWindow:()=>n.ipcRenderer.invoke("uiService:closeWindow"),restartApp:()=>n.ipcRenderer.invoke("uiService:restartApp"),downloadFile:(e,r)=>n.ipcRenderer.invoke("uiService:downloadFile",e,r),getAppVersion:()=>n.ipcRenderer.invoke("uiService:getAppVersion"),isMac:"darwin"===process.platform,isWindows:"win32"===process.platform,isLinux:"linux"===process.platform},t={get:e=>n.ipcRenderer.sendSync("configurationStore:get",e),set(e,r){n.ipcRenderer.send("configurationStore:set",e,r)},has:e=>n.ipcRenderer.sendSync("configurationStore:has",e),delete(e){n.ipcRenderer.send("configurationStore:delete",e)},reset(e){n.ipcRenderer.send("configurationStore:reset",e)},clear(){n.ipcRenderer.send("configurationStore:clear")},isErrorReportingEnabled:()=>n.ipcRenderer.sendSync("configurationStore:get","errorReportingEnabled"),setErrorReportingEnabled(e){n.ipcRenderer.send("configurationStore:set","errorReportingEnabled",e)},isAutoUpdateEnabled:()=>n.ipcRenderer.sendSync("configurationStore:get","autoUpdateEnabled"),setAutoUpdateEnabled(e){n.ipcRenderer.send("configurationStore:set","autoUpdateEnabled",e)}},c={checkForUpdates:()=>n.ipcRenderer.invoke("appUpdater:checkForUpdates"),downloadUpdate:()=>n.ipcRenderer.send("appUpdater:downloadUpdate"),quitAndInstall:()=>n.ipcRenderer.send("appUpdater:quitAndInstall")},s={startDemo:()=>n.ipcRenderer.invoke("demo:start"),stopDemo:()=>n.ipcRenderer.invoke("demo:stop"),getDemoAddress:()=>n.ipcRenderer.sendSync("demo:getAddress"),isStarted:()=>n.ipcRenderer.sendSync("demo:isStarted")};return n.contextBridge.exposeInMainWorld("utils",i),n.contextBridge.exposeInMainWorld("subscriptions",o),n.contextBridge.exposeInMainWorld("ui",d),n.contextBridge.exposeInMainWorld("isElectron",!0),n.contextBridge.exposeInMainWorld("daemonAddress",n.ipcRenderer.sendSync("daemon:address")),n.contextBridge.exposeInMainWorld("daemonWsAddress",n.ipcRenderer.sendSync("daemon:wsAddress")),n.contextBridge.exposeInMainWorld("daemonHealthy",(()=>n.ipcRenderer.sendSync("daemon:healthy"))),n.contextBridge.exposeInMainWorld("NODE_ENV","production"),n.contextBridge.exposeInMainWorld("configurationStore",t),n.contextBridge.exposeInMainWorld("appUpdater",c),n.contextBridge.exposeInMainWorld("demo",s),r})()));
//# sourceMappingURL=preload.js.map